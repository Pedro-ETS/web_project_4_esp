!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupClass=e,this._selectPopup=document.querySelector(".".concat(this._popupClass)),this._closeButton=this._selectPopup.querySelector(".".concat(this._popupClass,"__btn-close")),this._handleEscClose=this._handleEscClose.bind(this)}var n,r;return n=t,(r=[{key:"open",value:function(){this._selectPopup.classList.add("".concat(this._popupClass,"_opened")),document.addEventListener("keyup",this._handleEscClose),this.setEventListeners()}},{key:"close",value:function(){this._selectPopup.classList.remove("".concat(this._popupClass,"_opened")),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._closeButton.addEventListener("click",(function(){t.close()})),this._selectPopup.addEventListener("click",(function(e){e.target.classList.contains(t._popupClass)&&t.close()}))}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=u(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},i.apply(this,arguments)}function a(t,e){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},a(t,e)}function u(t){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},u(t)}var c=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&a(t,e)}(p,t);var e,n,c,s,l=(c=p,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=u(c);if(s){var n=u(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function p(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(n=l.call(this,t))._card=e,n._elementName=document.querySelector(".".concat(n._popupClass,"__lugar")),n._elementImg=document.querySelector(".".concat(n._popupClass,"__image-normal")),n}return e=p,(n=[{key:"open",value:function(){i(u(p.prototype),"open",this).call(this);var t=this._card.target.getAttribute("src"),e=this._card.target.getAttribute("alt"),n=e.substring(9,e.leng);this._elementImg.setAttribute("src",t),this._elementImg.setAttribute("alt","imagen de "+n),this._elementName.textContent=n}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),p}(n),s=[{name:"Valle de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/yosemite.jpg"},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lake-louise.jpg"},{name:"MontaÃ±as Calvas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lago.jpg"}],l=document.querySelector(".container"),p=l.querySelector(".edit-button_action_add"),f=(l.querySelector(".popup"),l.querySelector(".popup-add"),l.querySelector(".popup__btn-close"),l.querySelector(".popup-add__btn-close"),l.querySelector(".add-button")),m=(l.querySelector(".big-picture"),".cards"),y=(l.querySelector(".elements"),document.forms.popupadd,document.querySelector("#popup-name")),b=document.querySelector("#popup-descripcion");function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}var _=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardSelector=n,this._handleCardClick=this.handleCardClick}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__image").setAttribute("src",this._link),this._element.querySelector(".card__image").setAttribute("alt","Imagen de "+this._name),this._element.querySelector(".card__subtitle").textContent=this._name,this._element}},{key:"_likeImage",value:function(t){t.target.classList.toggle("card__btn-love_activate")}},{key:"_trashCard",value:function(t){t.target.parentNode.remove();var e=this._name,n=s.indexOf(e);s.splice(n,1)}},{key:"_displayContainerImage",value:function(t){openWindowContentImage(t),document.addEventListener("keyup",closeWindowdEsc)}},{key:"handleCardClick",value:function(t){new c("big-picture",t).open()}},{key:"_setEventListeners",value:function(){var t=this;this._element.addEventListener("click",(function(e){e.target.classList.contains("card__btn-love")?t._likeImage(e):e.target.classList.contains("card__btn-trash")?t._trashCard(e):e.target.classList.contains("card__image")&&t.handleCardClick(e)}))}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}var g=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=n,this._inputSelectorForm=e.inputSelectorForm,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClassForm=e.inactiveButtonClassForm,this._inputErrorClassForm=e.inputErrorClassForm,this._errorClassForm=e.errorClassForm}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e,n){var r=t.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClassForm),r.textContent=n}},{key:"_hideInputError",value:function(t,e){var n=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClassForm),n.classList.remove(this._errorClassForm),n.textContent=""}},{key:"_checkInputValidity",value:function(t,e){e.validity.valid?this._hideInputError(t,e):this._showInputError(t,e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(t,e){this._hasInvalidInput(t)?(e.classList.add(this._inactiveButtonClassForm),e.disabled=!0):(e.classList.remove(this._inactiveButtonClassForm),e.disabled=!1)}},{key:"_setEventListeners",value:function(){var t=this,e=document.querySelector(this._formSelector),n=Array.from(e.querySelectorAll(this._inputSelectorForm)),r=e.querySelector("button[type=submit]");".popup-add__btn-save"===".".concat(r.className)&&this._toggleButtonState(n,r),n.forEach((function(o){o.addEventListener("input",(function(i){t._checkInputValidity(e,o),t._toggleButtonState(n,r)}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}var k=function(){function t(e,n){var r=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(){var t=this;this._container.innerHTML="",this._renderedItems.forEach((function(e){t._renderer(e)}))}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,q(r.key),r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},P.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function L(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}function q(t){var e=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===j(e)?e:String(e)}var B=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(r);if(o){var n=I(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===j(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return L(t)}(this,t)});function a(t,e){var n,r,o,u;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),r=L(n=i.call(this,t)),u=function(t){t.preventDefault(),n.sendObject(),n.close()},(o=q(o="submitHandler"))in r?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._submitCallback=e,n._form=document.querySelector(".".concat(n._popupClass)),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._form.querySelectorAll(".".concat(this._popupClass,"__input")),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"sendObject",value:function(){var t=this._getInputValues();this._submitCallback(t)}},{key:"setEventListeners",value:function(){P(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this.submitHandler)}},{key:"close",value:function(){this._form.removeEventListener("submit",this.submitHandler),P(I(a.prototype),"close",this).call(this),this._form.classList.contains("popup-add")&&this._form.reset()}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(n);function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===F(o)?o:String(o)),r)}var o}var R=function(){function t(e){var n=e.nameSelector,r=e.jobSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.nameElement=document.querySelector(n),this.jobElement=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this.nameElement.textContent,job:this.jobElement.textContent}}},{key:"setUserInfo",value:function(t){this.nameElement.textContent=t.name,this.jobElement.textContent=t.job}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),x=new k({data:s,renderer:function(t){var e=new _(t,".card-template").generateCard();x.addItem(e)}},m);x.renderItems();var V=new B("popup-add",(function(t){s.push(t);var e=new k({data:s,renderer:function(t){var n=new _(t,".card-template").generateCard();e.addItem(n)}},m);e.renderItems()})),A=new R({nameSelector:".profile__subtitle",jobSelector:".profile__text"}),W=new B("popup",(function(t){A.setUserInfo(t)})),z=new g({inputSelectorForm:".popup__input",submitButtonSelectorForm:".popup__btn-save",inactiveButtonClassForm:"popup__btn-save_disabled",inputErrorClassForm:"popup__input_type_error",errorClassForm:"popup__error_visible"},".popup");p.addEventListener("click",(function(){var t=A.getUserInfo();y.value=t.name,b.value=t.job,W.open(),z.enableValidation()}));var N=new g({inputSelectorForm:".popup-add__input",submitButtonSelectorForm:".popup-add__btn-save",inactiveButtonClassForm:"popup-add__btn-save_disabled",inputErrorClassForm:"popup-add__input_type_error",errorClassForm:"popup-add__error_visible"},".popup-add");f.addEventListener("click",(function(){V.open(),N.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,